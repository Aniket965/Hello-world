/*@author: Jaako Andes
	   BSCS - 2A
	Copyright 2016 - 2017	*/

#include <stdio.h>
#include <stdlib.h>

struct node_R {
	int data_R;
	struct node_R *next;
};


void insertFirst (struct node_R** head_R_ref, int new_data_R) {
	struct node_R* new_node_R = (struct node_R*)malloc(sizeof(struct node_R));
	new_node_R->data_R = new_data_R;
	new_node_R->next = (*head_R_ref);
	(*head_R_ref) = new_node_R;
}

void append(struct node_R** head_R_ref, int new_data_R) {
	struct node_R* new_node_R = (struct node_R*)malloc(sizeof(struct node_R));
	struct node_R *last = *head_R_ref;
	new_node_R->data_R = new_data_R;
	new_node_R->next = NULL;

	if(*head_R_ref == NULL) {
		*head_R_ref = new_node_R;
		return; }

	while(last->next != NULL) 
		last = last->next;

	last->next = new_node_R;
	return;
}

void printList(struct node_R *node_R, int i) {
	while(node_R != NULL) {
	if (i != 1)
		printf("%d --> ", node_R->data_R);
	else
		printf("%d", node_R->data_R);

	i--;
	node_R = node_R->next;
		}
	printf("\n");
}

int main () {

	struct node_R* head_R = NULL;
	int i = 0, ins = 0, elem = 0, t = 0, j = 0, num = 0, choices = 0;

	printf("Enter the number of elements: ");
	scanf("%d", &num);
	printf("How many elements you want to process: ");
	scanf("%d", &elem);
	
	int process[elem];

	for(i=0; i!=elem; i++) {
		printf("Enter a number: ");
		scanf("%d", &process[i]);  }

	while ( j != elem) {
		append(&head_R, process[j]);
		j++;  }

	printList(head_R, i);
	printf("\n");
	
	while(choices !=2) {
	printf("1 -insert  2 - Exit: ");
	scanf("%d", &choices);

	switch(choices) {	
	case 1:{
		printf("ENTER a Number to Insert: ");
		scanf("%d", &t);

		insertFirst(&head_R, t);
		i++;
		printList(head_R, i);
		break;
	}

	case 2:
		break;
	
	default:
		printf("Error! Wrong input!\n");
		break;
}
}
}
