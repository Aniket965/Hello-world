import numpy as np
from math import sqrt
import warnings
from collections import Counter


def k_nearest_neighbors(data, predict, k=3):
    if(len(data) >= k):
        warnings.warn('K is set to a value less than total voting group')
    distances = []
    for group in data:
        for features in data[group]:
            euclidean_distance = np.linalg.norm(np.array(features) - np.array(predict))
            distances.append([euclidean_distance, group])
    votes = [i[1] for i in sorted(distances)[:k]]
    print(Counter(votes).most_common(1))
    vote_result = Counter(votes).most_common(1)[0][0]
    return vote_result
