
SET SERVEROUTPUT ON
   b integer := 20; 
   c integer; 
   f real; 
BEGIN 
   c := a + b; 
   dbms_output.put_line('Value of c: ' || c); 
   f := 70.0/3.0; 
   dbms_output.put_line('Value of f: ' || f); 
END; 


Example 2.......

SET SERVEROUTPUT ON
DECLARE 
   -- Global variables  
   num1 number := 95;  
   num2 number := 85;  
BEGIN  
   dbms_output.put_line('Outer Variable num1: ' || num1);
   dbms_output.put_line('Outer Variable num2: ' || num2); 
   DECLARE  
      -- Local variables 
      num1 number := 195;  
      num2 number := 185;  
   BEGIN  
      dbms_output.put_line('Inner Variable num1: ' || num1); 
      dbms_output.put_line('Inner Variable num2: ' || num2); 
   END;  
END; 


Example 3.....

SET SERVEROUTPUT ON
DECLARE 
   -- constant declaration 
   pi constant number := 3.14; 
   -- other declarations 
   radius number(5,2);  
   dia number(5,2);  
   circumference number(7, 2); 
   area number (10, 2); 
BEGIN  
   -- processing 
   radius := 9.5;  
   dia := radius * 2;  
   circumference := 2.0 * pi * radius; 
   area := pi * radius * radius; 
   -- output 
   dbms_output.put_line('Radius: ' || radius); 
   dbms_output.put_line('Diameter: ' || dia); 
   dbms_output.put_line('Circumference: ' || circumference); 
   dbms_output.put_line('Area: ' || area); 
END; 



EXample 4....

SET SERVEROUPUT ON
DECLARE 
   message  varchar2(30):= 'That''s tutorialspoint.com!'; 
BEGIN 
   dbms_output.put_line(message); 
END; 


EXAMPLE 5....for addition

SET SERVEROUTPUT ON
Declare
Var1 integer;
Var2 integer;
Var3 integer;
Begin
Var1:=&var1;
Var2:=&var2;
Var3:=var1+var2;
Dbms_output.put_line(var3);
End;


EXAMple 6... table
SET SERVEROUTPUT ON
declare
    n number;-
    i number;
 
begin
    n:=&n;
    
    for i in 1..10
    loop
        dbms_output.put_line(n||' x '||i||' = '||n*i);
    end loop;
end;




EXample 8.....reverse a string

SET SERVEROUTPUT ON
declare
    str1 varchar2(50):='&str';
    str2 varchar2(50);
    len number;
    i number;
 
begin
    len:=length(str1);
    
    for i in reverse 1..len
    loop
        str2:=str2 || substr(str1,i,1);
    end loop;
    
    dbms_output.put_line('Reverse of String is:'||str2);
end;


example 9....
Pattern 1:


*
**
***
****
*****

SET SERVEROUTPUT ON
declare
    n number:=5;
    i number;
    j number;
begin
    for i in 1..n
    loop
        for j in 1..i
        loop
            dbms_output.put('*');
        end loop;
        
        dbms_output.new_line;
    end loop;
end;


example 10...
step 1: create table bankk(curbal int,accno int);

step 2: Insert into bankk(curbal, accNo) values(3000, 006);

set serveroutput on
declare
mcur_bal number(11,2);
macct_no varchar2(7);
mfine number(4):=100;
mmin_bal constant number(7,2):=5000.00;
begin
macct_no:=&macct_no;
select curbal into mcur_bal from acct_mstr where acct_no=macct_no;
If mcur_bal<mmin_bal then
update acct_mstr set curbal=curbal-mfine where acct_no=macct_no;
end if;
end;
---------------------------------
declare
Pi constant number(4,2):=3.14;
radius number(5);
area number(14,2);
begin
radius:=3;
while radius<=7
loop
area:= Pi * power(radius,2);
insert into area1 values(radius,area);
radius:=radius+1;
End loop;
END;





example 11 : .......To print numbers divisible by 3 upto 100

SET SERVER OUTPUT ON
DECLARE
BEGIN
FOR i IN 1..99
LOOP
IF Mod(i,3) = 0 THEN
DBMS_OUTPUT.PUT_LINE(i);
END IF;
END LOOP;
END;




example 12 : .......To print even numbers upto 100 

SET SERVER OUTPUT ON
DECLARE
BEGIN
FOR i IN 1..99
LOOP
IF Mod(i,2) = 0 THEN
DBMS_OUTPUT.PUT_LINE(i);
END IF;
END LOOP;
END;





example : 13 .........To check if a number is palindrome or not
set serveroutput on
declare
    n number;
    m number;
    rev number:=0;
    r number;
 
begin
    n:=&n;
    m:=n;
    
    while n>0
    loop
        r:=mod(n,10);
        rev:=(rev*10)+r;
        n:=trunc(n/10);
    end loop;
    
    if m=rev
    then
        dbms_output.put_line('number is palindrome');
    else
        dbms_output.put_line('number is not palindrome');
    end if;
end;



EXAMPLE:14 TO CHECK FACTORIAL OF A NUMBER
SET SERVEROUTPUT ON
declare
    n number;
    fac number:=1;
    i number;
 
begin
    n:=&n;
 
    for i in 1..n
    loop
        fac:=fac*i;
    end loop;
 
    dbms_output.put_line('factorial='||fac);
end;



example 15:.......To check if a number is armstrong or not
set serveroutput on
declare
    n number:=&n;
    s number:=0;
    r number;
    len number;
    m number;
 
begin
    m:=n;
 
    len:=length(to_char(n));
    
    while n>0
    loop
        r:=mod(n,10);
        s:=s+power(r,len);
        n:=trunc(n/10);
    end loop;
    
    if m=s
    then
        dbms_output.put_line('armstrong number');
    else
        dbms_output.put_line('not armstrong number');
    end if;
    
end;




example 16:.......To check if a number is prime or not
set serveroutput on
declare
    n number;
    i number;
    flag number;
 
begin
    i:=2;
    flag:=1;
    n:=&n;
 
    for i in 2..n/2
    loop
        if mod(n,i)=0EXample 1.....

SET SERVEROUTPUT ON
DECLARE 
   a integer := 10; 
   b integer := 20; 
   c integer; 
   f real; 
BEGIN 
   c := a + b; 
   dbms_output.put_line('Value of c: ' || c); 
   f := 70.0/3.0; 
   dbms_output.put_line('Value of f: ' || f); 
END; 


Example 2.......

SET SERVEROUTPUT ON
DECLARE 
   -- Global variables  
   num1 number := 95;  
   num2 number := 85;  
BEGIN  
   dbms_output.put_line('Outer Variable num1: ' || num1);
   dbms_output.put_line('Outer Variable num2: ' || num2); 
   DECLARE  
      -- Local variables 
      num1 number := 195;  
      num2 number := 185;  
   BEGIN  
      dbms_output.put_line('Inner Variable num1: ' || num1); 
      dbms_output.put_line('Inner Variable num2: ' || num2); 
   END;  
END; 


Example 3.....

SET SERVEROUTPUT ON
DECLARE 
   -- constant declaration 
   pi constant number := 3.14; 
   -- other declarations 
   radius number(5,2);  
   dia number(5,2);  
   circumference number(7, 2); 
   area number (10, 2); 
BEGIN  
   -- processing 
   radius := 9.5;  
   dia := radius * 2;  
   circumference := 2.0 * pi * radius; 
   area := pi * radius * radius; 
   -- output 
   dbms_output.put_line('Radius: ' || radius); 
   dbms_output.put_line('Diameter: ' || dia); 
   dbms_output.put_line('Circumference: ' || circumference); 
   dbms_output.put_line('Area: ' || area); 
END; 



EXample 4....

SET SERVEROUPUT ON
DECLARE 
   message  varchar2(30):= 'That''s tutorialspoint.com!'; 
BEGIN 
   dbms_output.put_line(message); 
END; 


EXAMPLE 5....for addition

SET SERVEROUTPUT ON
Declare
Var1 integer;
Var2 integer;
Var3 integer;
Begin
Var1:=&var1;
Var2:=&var2;
Var3:=var1+var2;
Dbms_output.put_line(var3);
End;


EXAMple 6... table
SET SERVEROUTPUT ON
declare
    n number;-
    i number;
 
begin
    n:=&n;
    
    for i in 1..10
    loop
        dbms_output.put_line(n||' x '||i||' = '||n*i);
    end loop;
end;




EXample 8.....reverse a string

SET SERVEROUTPUT ON
declare
    str1 varchar2(50):='&str';
    str2 varchar2(50);
    len number;
    i number;
 
begin
    len:=length(str1);
    
    for i in reverse 1..len
    loop
        str2:=str2 || substr(str1,i,1);
    end loop;
    
    dbms_output.put_line('Reverse of String is:'||str2);
end;


example 9....
Pattern 1:


*
**
***
****
*****

SET SERVEROUTPUT ON
declare
    n number:=5;
    i number;
    j number;
begin
    for i in 1..n
    loop
        for j in 1..i
        loop
            dbms_output.put('*');
        end loop;
        
        dbms_output.new_line;
    end loop;
end;


example 10...
step 1: create table bankk(curbal int,accno int);

step 2: Insert into bankk(curbal, accNo) values(3000, 006);

set serveroutput on
declare
mcur_bal number(11,2);
macct_no varchar2(7);
mfine number(4):=100;
mmin_bal constant number(7,2):=5000.00;
begin
macct_no:=&macct_no;
select curbal into mcur_bal from acct_mstr where acct_no=macct_no;
If mcur_bal<mmin_bal then
update acct_mstr set curbal=curbal-mfine where acct_no=macct_no;
end if;
end;
---------------------------------
declare
Pi constant number(4,2):=3.14;
radius number(5);
area number(14,2);
begin
radius:=3;
while radius<=7
loop
area:= Pi * power(radius,2);
insert into area1 values(radius,area);
radius:=radius+1;
End loop;
END;





example 11 : .......To print numbers divisible by 3 upto 100

SET SERVER OUTPUT ON
DECLARE
BEGIN
FOR i IN 1..99
LOOP
IF Mod(i,3) = 0 THEN
DBMS_OUTPUT.PUT_LINE(i);
END IF;
END LOOP;
END;




example 12 : .......To print even numbers upto 100

SET SERVER OUTPUT ON
DECLARE
BEGIN
FOR i IN 1..99
LOOP
IF Mod(i,2) = 0 THEN
DBMS_OUTPUT.PUT_LINE(i);
END IF;
END LOOP;
END;





example : 13 .........To check if a number is palindrome or not
set serveroutput on
declare
    n number;
    m number;
    rev number:=0;
    r number;
 
begin
    n:=&n;
    m:=n;
    
    while n>0
    loop
        r:=mod(n,10);
        rev:=(rev*10)+r;
        n:=trunc(n/10);
    end loop;
    
    if m=rev
    then
        dbms_output.put_line('number is palindrome');
    else
        dbms_output.put_line('number is not palindrome');
    end if;
end;



EXAMPLE:14 TO CHECK FACTORIAL OF A NUMBER
SET SERVEROUTPUT ON
declare
    n number;
    fac number:=1;
    i number;
 
begin
    n:=&n;
 
    for i in 1..n
    loop
        fac:=fac*i;
    end loop;
 
    dbms_output.put_line('factorial='||fac);
end;



example 15:.......To check if a number is armstrong or not
set serveroutput on
declare
    n number:=&n;
    s number:=0;
    r number;
    len number;
    m number;
 
begin
    m:=n;
 
    len:=length(to_char(n));
    
    while n>0
    loop
        r:=mod(n,10);
        s:=s+power(r,len);
        n:=trunc(n/10);
    end loop;
    
    if m=s
    then
        dbms_output.put_line('armstrong number');
    else
        dbms_output.put_line('not armstrong number');
    end if;
    
end;




example 16:.......To check if a number is prime or not
set serveroutput on
declare
    n number;
    i number;
    flag number;
 
begin
    i:=2;
    flag:=1;
    n:=&n;
 
    for i in 2..n/2
    loop
        if mod(n,i)=0
        then
            flag:=0;
            exit;
        end if;
    end loop;
 
    if flag=1
    then
        dbms_output.put_line('prime');
    else
        dbms_output.put_line('not prime');
    end if;
end;

        then
            flag:=0;
            exit;
        end if;
    end loop;
 
    if flag=1
    then
        dbms_output.put_line('prime');
    else
        dbms_output.put_line('not prime');
    end if;
end;